server:
  port: 8080

logging:
  level:
    com.example: debug
    org.springframework: debug
    org.spring.springboot.dao: debug

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://10.25.16.253:6033/jqd_test?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
    username: jqd_test_rc
    password: jqd_test_rc
              # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 1
    maxActive: 2
             # 配置获取连接等待超时的时间
    maxWait: 60000
             # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
              # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    autoReconnect: true
              # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
              # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
             # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
             # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
             # 是否自动回收超时连接
    removeAbandoned: true
              # 自动回收超时时间 30分钟
    removeAbandonedTimeout: 180
 
mybatis:
  mapper-locations: classpath:mapper/*Mapper.xml
  type-aliases-package: com.example.entity
